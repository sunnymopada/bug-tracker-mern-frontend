{"version":3,"sources":["store/middleware/errorLogger.js","store/api.js","store/middleware/api.js","store/bugs.js","store/projects.js","utils/StorageUtils.js","store/users.js","store/entities.js","store/reducer.js","store/configureStore.js","components/Common/styledComponents.js","components/Common/FormComponents.js","components/UserForm/index.js","routes/LoginRoute/styledComponents.js","routes/LoginRoute/index.js","components/BugItem/styledComponents.js","components/BugItem/index.js","components/BugsList/styledComponents.js","components/BugsList/index.js","routes/DashboardRoute/styledComponents.js","routes/DashboardRoute/index.js","routes/RegisterRoute/styledComponents.js","routes/RegisterRoute/index.js","constants/NavigationConstants.js","components/RouteUtilComponents/index.js","components/Navbar/styledComponents.js","components/Navbar/index.js","App.js","reportWebVitals.js","index.js"],"names":["errorLogger","dispatch","getState","next","action","type","console","log","payload","message","apiCallBegan","createAction","apiCallSuccess","apiCallFailed","api","a","url","method","data","onStart","onSuccess","onError","axios","request","baseURL","response","slice","createSlice","name","initialState","list","loading","lastFetch","reducers","bugsRequested","bugs","bugsReceived","Date","now","bugsRequestFailed","bugAdded","push","bugResolved","bugIndex","findIndex","bug","id","resolved","bugRemoved","filter","pay","bugAssignedToUser","bugId","userId","actions","lastId","createSelector","state","entities","projectAdded","projects","ACCESS_TOKEN_KEY","setAccessToken","accessToken","expiresInDays","cookieKey","value","Cookies","set","expires","setCookie","getAccessToken","get","removeAccessToken","remove","users","loginStatus","userAdded","userRegistered","jwt_token","expires_in","userLoggedIn","userLoggedOut","combineReducers","bugsReducer","projectsReducer","usersReducer","entitiesReducer","form","formReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","FormElement","styled","div","FieldErrorMessage","span","required","undefined","renderField","input","label","meta","touched","error","warning","FormLabel","Form","Control","placeholder","ReduxUserForm","reduxForm","props","handleSubmit","buttonText","onSubmit","Field","component","validate","Button","variant","LoginFormContainer","LoginFormCard","Card","LoginRoute","onLogin","values","requestObject","username","password","loginUser","this","React","Component","connect","ResolveButton","button","BugItem","renderResolveBug","onResolveBug","disabled","onClick","isActiveAssignee","assigneeId","renderChangeAssignee","onAssignABugUser","DropdownButton","as","ButtonGroup","title","onSelect","eventKey","Dropdown","Item","active","description","DashboardTable","Table","BugsList","renderBugs","map","renderTableHeading","responsive","striped","bordered","hover","DashboardContainer","DashboardRoute","loadBugs","resolveABug","assignABugUser","moment","diff","RegisterFormContainer","RegisterFormCard","RegisterRoute","onRegister","registerUser","REGISTER_ROUTE_PATH","LOGIN_ROUTE_PATH","DASHBOARD_ROUTE_PATH","mapStateToProps","isLoggedIn","ProtectedRoute","to","AuthCheckRoute","NavBarContainer","Navbar","NavBarBrand","Brand","NavLogo","img","Header","onClickLogout","logoutUser","renderAuthItems","Nav","Link","Fragment","collapseOnSelect","expand","bg","Container","src","width","height","alt","Toggle","aria-controls","Collapse","className","HeaderWithRouter","withRouter","App","renderRoutes","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf084972.chunk.js","sourcesContent":["const errorLogger = ({ dispatch, getState }) => next => action => {\n   if (action.type === 'error') {\n      console.log(action.payload.message)\n   } else {\n      return next(action)\n   }\n}\n\nexport default errorLogger\n","import { createAction } from '@reduxjs/toolkit'\n\nexport const BASE_BUGS_URL = 'http://localhost:9001/api'\n\nexport const apiCallBegan = createAction('api/callBegan')\n\nexport const apiCallSuccess = createAction('api/callSuccess')\n\nexport const apiCallFailed = createAction('api/callFailed')\n","import axios from 'axios'\n\nimport {\n   apiCallBegan,\n   apiCallFailed,\n   apiCallSuccess,\n   BASE_BUGS_URL\n} from '../api'\n\nconst api = ({ dispatch }) => next => async action => {\n   if (action.type !== apiCallBegan.type) {\n      return next(action)\n   }\n\n   const { url, method, data, onStart, onSuccess, onError } = action.payload\n\n   if (onStart) {\n      dispatch({ type: onStart })\n   }\n   next(action)\n\n   try {\n      const response = await axios.request({\n         baseURL: BASE_BUGS_URL,\n         url,\n         method,\n         data\n      })\n      //General\n      dispatch(apiCallSuccess(response.data))\n      //Specific\n      if (onSuccess) {\n         dispatch({ type: onSuccess, payload: response.data })\n      }\n   } catch (error) {\n      //General\n      dispatch(apiCallFailed(error.message))\n      //Specific\n      if (onError) {\n         dispatch({ type: onError, payload: error.message })\n      }\n   }\n}\n\nexport default api\n","import { createSlice } from '@reduxjs/toolkit'\nimport moment from 'moment'\n\nimport { createSelector } from 'reselect'\n\nimport { apiCallBegan } from './api'\n\nconst slice = createSlice({\n   name: 'bugs',\n   initialState: {\n      list: [],\n      loading: false,\n      lastFetch: null\n   },\n   reducers: {\n      bugsRequested: (bugs, action) => {\n         bugs.loading = true\n      },\n      bugsReceived: (bugs, action) => {\n         bugs.list = action.payload\n         bugs.loading = false\n         bugs.lastFetch = Date.now()\n      },\n      bugsRequestFailed: (bugs, action) => {\n         bugs.loading = false\n      },\n      bugAdded: (bugs, action) => {\n         bugs.list.push(action.payload)\n      },\n      bugResolved: (bugs, action) => {\n         const bugIndex = bugs.list.findIndex(\n            bug => bug.id === action.payload.id\n         )\n         bugs.list[bugIndex].resolved = true\n      },\n      bugRemoved: (bugs, action) => {\n         bugs.list.filter(bug => bug.id !== action.pay)\n      },\n      bugAssignedToUser: (bugs, action) => {\n         const { id: bugId, userId } = action.payload\n         const bugIndex = bugs.list.findIndex(bug => bug.id === bugId)\n         bugs.list[bugIndex].userId = userId\n      }\n   }\n})\n\nexport const {\n   bugsRequested,\n   bugsReceived,\n   bugsRequestFailed,\n   bugAdded,\n   bugResolved,\n   bugRemoved,\n   bugAssignedToUser\n} = slice.actions\n\nexport default slice.reducer\n\n// Action Creators\nconst url = '/bugs'\n\nexport const loadBugs = () => (dispatch, getState) => {\n   const { lastFetch } = getState().entities.bugs\n   const diffInMinutes = moment().diff(moment(lastFetch), 'minutes')\n   if (diffInMinutes < 5) {\n      return\n   }\n   dispatch(\n      apiCallBegan({\n         url,\n         onStart: bugsRequested.type,\n         onSuccess: bugsReceived.type,\n         onError: bugsRequestFailed.type\n      })\n   )\n}\n\nexport const addBug = bug =>\n   apiCallBegan({ url, method: 'post', data: bug, onSuccess: bugAdded.type })\n\nexport const assignABugUser = (id, userId) =>\n   apiCallBegan({\n      url: `${url}/${id}`,\n      method: 'patch',\n      data: { userId },\n      onSuccess: bugAssignedToUser.type\n   })\n\nexport const resolveABug = id =>\n   apiCallBegan({\n      url: `${url}/${id}`,\n      method: 'patch',\n      data: { resolved: true },\n      onSuccess: bugResolved.type\n   })\n\n//Memoization\nexport const getUnresolvedBugs = createSelector(\n   state => state.entities.bugs,\n   bugs => bugs.list.filter(bug => !bug.resolved)\n)\n\nexport const getBugsAssignedToAUser = userId =>\n   createSelector(\n      state => state.entities.bugs,\n      bugs => bugs.list.filter(bug => bug.userId === userId)\n   )\n","import { createSlice } from '@reduxjs/toolkit'\n\nlet lastId = 0\n\nconst slice = createSlice({\n  name: 'projects',\n  initialState: [],\n  reducers: {\n    projectAdded: (projects, action) => {\n      projects.push({\n        id: ++lastId,\n        name: action.payload.name,\n      })\n    },\n  },\n})\n\nexport const { projectAdded } = slice.actions\n\nexport default slice.reducer\n","import Cookies from 'js-cookie'\n\nconst ACCESS_TOKEN_KEY = 'a8bFrGk9'\n\nconst getCookie = name => {\n   return Cookies.get(name)\n}\n\nconst setCookie = (cookieKey, value, expiresInDays = 30) => {\n   return Cookies.set(cookieKey, value, { expires: expiresInDays })\n}\n\nexport const removeCookie = cookieKey => {\n   Cookies.remove(cookieKey)\n}\n\nexport const setAccessToken = (accessToken, expiresInDays) => {\n   return setCookie(ACCESS_TOKEN_KEY, accessToken, expiresInDays)\n}\n\nconst getAccessToken = () => {\n   return getCookie(ACCESS_TOKEN_KEY)\n}\n\nexport const removeAccessToken = () => {\n   removeCookie(ACCESS_TOKEN_KEY)\n}\n\nexport const isLoggedIn = () => {\n   if (getAccessToken()) {\n      return true\n   }\n   return false\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nimport {\n   isLoggedIn,\n   removeAccessToken,\n   setAccessToken\n} from '../utils/StorageUtils'\n\nimport { apiCallBegan } from './api'\n\nlet lastId = 0\n\nconst slice = createSlice({\n   name: 'auth',\n   initialState: {\n      users: [],\n      loginStatus: isLoggedIn()\n   },\n   reducers: {\n      userAdded: (state, action) => {\n         state.users.push({\n            id: ++lastId,\n            name: action.payload.name\n         })\n      },\n      userRegistered: (state, action) => {\n         state.loginStatus = true\n         const { jwt_token, expires_in } = action.payload\n         setAccessToken(jwt_token, expires_in)\n      },\n      userLoggedIn: (state, action) => {\n         state.loginStatus = true\n         const { jwt_token, expires_in } = action.payload\n         setAccessToken(jwt_token, expires_in)\n      },\n      userLoggedOut: (state, action) => {\n         removeAccessToken()\n         state.loginStatus = false\n      }\n   }\n})\n\nexport const {\n   userAdded,\n   userRegistered,\n   userLoggedIn,\n   userLoggedOut\n} = slice.actions\n\nconst url = '/users'\n\nexport const registerUser = requestObject =>\n   apiCallBegan({\n      url: `${url}/register`,\n      method: 'post',\n      data: requestObject,\n      onSuccess: userRegistered.type\n   })\n\nexport const loginUser = requestObject =>\n   apiCallBegan({\n      url: `${url}/login`,\n      method: 'post',\n      data: requestObject,\n      onSuccess: userLoggedIn.type\n   })\n\nexport const logoutUser = () => dispatch => dispatch(userLoggedOut())\n\nexport default slice.reducer\n","import { combineReducers } from 'redux'\n\nimport bugsReducer from './bugs'\nimport projectsReducer from './projects'\nimport usersReducer from './users'\n\nexport default combineReducers({\n   bugs: bugsReducer,\n   projects: projectsReducer,\n   users: usersReducer\n})\n","import { combineReducers } from 'redux'\n\nimport { reducer as formReducer } from 'redux-form'\n\nimport entitiesReducer from './entities'\n\nexport default combineReducers({\n   entities: entitiesReducer,\n   form: formReducer\n})\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\n\nimport errorLogger from './middleware/errorLogger'\n\nimport api from './middleware/api'\n\nimport reducer from './reducer'\n\nconst store = configureStore({\n   reducer,\n   middleware: [...getDefaultMiddleware(), errorLogger, api]\n})\n\nexport default store\n","import styled from 'styled-components'\n\nexport const FormElement = styled.div`\n   display: flex;\n   flex-direction: column;\n   margin-bottom: 16px;\n`\n\nexport const FieldErrorMessage = styled.span`\n   color: red;\n`\n","import React from 'react'\nimport { Form, FormLabel } from 'react-bootstrap'\n\nimport { FormElement, FieldErrorMessage } from './styledComponents'\n\nconst required = value => (value ? undefined : '*Required')\n\nconst renderField = ({\n   input,\n   label,\n   type,\n   meta: { touched, error, warning }\n}) => (\n   <FormElement>\n      <FormLabel>{label}</FormLabel>\n      <div>\n         <Form.Control {...input} placeholder={label} type={type} />\n         {touched &&\n            ((error && <FieldErrorMessage>{error}</FieldErrorMessage>) ||\n               (warning && <FieldErrorMessage>{warning}</FieldErrorMessage>))}\n      </div>\n   </FormElement>\n)\n\nexport { required, renderField }\n","import React from 'react'\nimport { Button } from 'react-bootstrap'\nimport { Field, reduxForm } from 'redux-form'\n\nimport { renderField, required } from '../Common/FormComponents'\n\nconst UserForm = props => {\n   const { handleSubmit, buttonText } = props\n   return (\n      <form onSubmit={handleSubmit}>\n         <Field\n            name='username'\n            type='text'\n            component={renderField}\n            label='Username'\n            validate={[required]}\n         />\n         <Field\n            name='password'\n            type='password'\n            component={renderField}\n            label='Password'\n            validate={[required]}\n         />\n         <Button type='submit' variant='primary'>\n            {buttonText}\n         </Button>\n      </form>\n   )\n}\n\nconst ReduxUserForm = reduxForm({ form: 'user' })(UserForm)\n\nexport default ReduxUserForm\n","import styled from 'styled-components'\n\nimport { Card } from 'react-bootstrap'\n\nexport const LoginFormContainer = styled.div`\n   display: flex;\n   align-items: center;\n   justify-content: center;\n`\n\nexport const LoginFormCard = styled(Card)`\n   width: 500px;\n   padding: 40px;\n   margin-top: 100px;\n`\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { loginUser } from '../../store/users'\n\nimport UserForm from '../../components/UserForm'\n\nimport { LoginFormCard, LoginFormContainer } from './styledComponents'\n\nclass LoginRoute extends React.Component {\n   onLogin = values => {\n      const { username, password } = values\n      const requestObject = {\n         username,\n         password\n      }\n      const { loginUser } = this.props\n      loginUser(requestObject)\n   }\n\n   render() {\n      return (\n         <LoginFormContainer>\n            <LoginFormCard>\n               <UserForm onSubmit={this.onLogin} buttonText={'Login'} />\n            </LoginFormCard>\n         </LoginFormContainer>\n      )\n   }\n}\n\nconst mapStateToProps = state => {\n   return {}\n}\n\nconst mapDispatchToProps = dispatch => {\n   return {\n      loginUser: requestObject => {\n         dispatch(loginUser(requestObject))\n      }\n   }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginRoute)\n","import styled from 'styled-components'\n\nexport const ResolveButton = styled.button`\n   color: grey;\n   border: 0px;\n`\n","import React, { Component } from 'react'\nimport { DropdownButton, Dropdown, ButtonGroup } from 'react-bootstrap'\n\nimport { ResolveButton } from './styledComponents'\n\nclass BugItem extends Component {\n   renderResolveBug = () => {\n      const { bug, onResolveBug } = this.props\n      const { resolved, id } = bug\n      return (\n         <ResolveButton\n            disabled={resolved}\n            onClick={() => {\n               onResolveBug(id)\n            }}\n         >\n            Resolve\n         </ResolveButton>\n      )\n   }\n\n   isActiveAssignee = assigneeId => {\n      const { bug } = this.props\n      return assigneeId === bug.userId\n   }\n\n   renderChangeAssignee = () => {\n      const { bug, onAssignABugUser } = this.props\n      const { id, userId } = bug\n      return (\n         <DropdownButton\n            as={ButtonGroup}\n            id={`dropdown-variants-${id}`}\n            variant={'secondary'}\n            title={userId ? userId : '-1'}\n            onSelect={eventKey => {\n               onAssignABugUser(id, eventKey)\n            }}\n         >\n            <Dropdown.Item eventKey='1' active={this.isActiveAssignee(1)}>\n               1\n            </Dropdown.Item>\n            <Dropdown.Item eventKey='2' active={this.isActiveAssignee(2)}>\n               2\n            </Dropdown.Item>\n            <Dropdown.Item eventKey='3' active={this.isActiveAssignee(3)}>\n               3\n            </Dropdown.Item>\n            <Dropdown.Item eventKey='4' active={this.isActiveAssignee(4)}>\n               4\n            </Dropdown.Item>\n         </DropdownButton>\n      )\n   }\n\n   render() {\n      const { bug } = this.props\n      const { id, description } = bug\n      return (\n         <>\n            <tr key={id}>\n               <td>{id}</td>\n               <td>{description}</td>\n               <td>{this.renderChangeAssignee()}</td>\n               <td>{this.renderResolveBug()}</td>\n            </tr>\n         </>\n      )\n   }\n}\n\nexport default BugItem\n","import styled from 'styled-components'\n\nimport { Table } from 'react-bootstrap'\n\nexport const DashboardTable = styled(Table)`\n   border-radius: 4px;\n   overflow: hidden;\n   width: 90vw;\n`\n","import React, { Component } from 'react'\n\nimport BugItem from '../BugItem'\n\nimport { DashboardTable } from './styledComponents'\n\nclass BugsList extends Component {\n   renderBugs = () => {\n      const { bugs, onResolveBug, onAssignABugUser } = this.props\n      return bugs.map(bug => {\n         return (\n            <BugItem\n               key={bug.id}\n               bug={bug}\n               onResolveBug={onResolveBug}\n               onAssignABugUser={onAssignABugUser}\n            />\n         )\n      })\n   }\n\n   renderTableHeading = () => {\n      return (\n         <tr>\n            <th>#</th>\n            <th>Description</th>\n            <th>Assignee</th>\n            <th>Status</th>\n         </tr>\n      )\n   }\n\n   render() {\n      return (\n         <DashboardTable responsive striped bordered hover variant='dark'>\n            <thead>{this.renderTableHeading()}</thead>\n            <tbody>{this.renderBugs()}</tbody>\n         </DashboardTable>\n      )\n   }\n}\n\nexport default BugsList\n","import styled from 'styled-components'\n\nexport const DashboardContainer = styled.div`\n   margin-top: 50px;\n   justify-content: center;\n   display: flex;\n`\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { loadBugs, resolveABug, assignABugUser } from '../../store/bugs'\n\nimport BugsList from '../../components/BugsList'\n\nimport { DashboardContainer } from './styledComponents'\n\nclass DashboardRoute extends Component {\n   componentDidMount() {\n      this.props.loadBugs()\n   }\n\n   render() {\n      const { bugs, resolveABug, assignABugUser } = this.props\n      return (\n         <DashboardContainer>\n            <BugsList\n               bugs={bugs}\n               onResolveBug={resolveABug}\n               onAssignABugUser={assignABugUser}\n            />\n         </DashboardContainer>\n      )\n   }\n}\n\nconst mapStateToProps = state => {\n   return {\n      bugs: state.entities.bugs.list\n   }\n}\n\nconst mapDispatchToProps = dispatch => {\n   return {\n      loadBugs: () => dispatch(loadBugs()),\n      resolveABug: id => dispatch(resolveABug(id)),\n      assignABugUser: (id, userId) => {\n         dispatch(assignABugUser(id, userId))\n      }\n   }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardRoute)\n","import styled from 'styled-components'\n\nimport { Card } from 'react-bootstrap'\n\nexport const RegisterFormContainer = styled.div`\n   display: flex;\n   align-items: center;\n   justify-content: center;\n`\n\nexport const RegisterFormCard = styled(Card)`\n   width: 500px;\n   padding: 40px;\n   margin-top: 100px;\n`\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { registerUser } from '../../store/users'\n\nimport UserForm from '../../components/UserForm'\n\nimport { RegisterFormCard, RegisterFormContainer } from './styledComponents'\n\nclass RegisterRoute extends React.Component {\n   onRegister = values => {\n      const { username, password } = values\n      const requestObject = {\n         username,\n         password\n      }\n      const { registerUser } = this.props\n      registerUser(requestObject)\n   }\n\n   render() {\n      return (\n         <RegisterFormContainer>\n            <RegisterFormCard>\n               <UserForm onSubmit={this.onRegister} buttonText={'Register'} />\n            </RegisterFormCard>\n         </RegisterFormContainer>\n      )\n   }\n}\n\nconst mapStateToProps = state => {\n   return {}\n}\n\nconst mapDispatchToProps = dispatch => {\n   return {\n      registerUser: requestObject => {\n         dispatch(registerUser(requestObject))\n      }\n   }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterRoute)\n","export const REGISTER_ROUTE_PATH = '/register'\nexport const LOGIN_ROUTE_PATH = '/login'\nexport const DASHBOARD_ROUTE_PATH = '/dashboard'\nexport const HOME_ROUTE_PATH = '/'\n","import { Redirect, Route } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport {\n   HOME_ROUTE_PATH,\n   LOGIN_ROUTE_PATH\n} from '../../constants/NavigationConstants'\n\nconst ProtectedRouteWrapper = props => {\n   if (!props.isLoggedIn) {\n      return <Redirect to={LOGIN_ROUTE_PATH} />\n   }\n   return <Route {...props} />\n}\n\nconst AuthCheckRouteWrapper = props => {\n   if (props.isLoggedIn) {\n      return <Redirect to={HOME_ROUTE_PATH} />\n   }\n   return <Route {...props} />\n}\n\nconst mapStateToProps = state => {\n   return {\n      isLoggedIn: state.entities.users.loginStatus\n   }\n}\n\nconst ProtectedRoute = connect(mapStateToProps)(ProtectedRouteWrapper)\n\nconst AuthCheckRoute = connect(mapStateToProps)(AuthCheckRouteWrapper)\n\nexport { ProtectedRoute, AuthCheckRoute }\n","import styled from 'styled-components'\n\nimport { Navbar } from 'react-bootstrap'\n\nexport const NavBarContainer = styled(Navbar)`\n   background: white;\n   box-shadow: 0 2px 2px 0 rgba(31, 45, 61, 0.15);\n`\nexport const NavBarBrand = styled(Navbar.Brand)`\n   padding-bottom: 0px;\n   padding-top: 0px;\n   display: flex;\n   align-items: center;\n`\nexport const NavLogo = styled.img`\n   margin-right: 5px;\n`\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, withRouter } from 'react-router-dom'\nimport { Navbar, Container, Nav } from 'react-bootstrap'\n\nimport { logoutUser } from '../../store/users'\n\nimport {\n   DASHBOARD_ROUTE_PATH,\n   LOGIN_ROUTE_PATH,\n   REGISTER_ROUTE_PATH\n} from '../../constants/NavigationConstants'\n\nimport { NavBarContainer, NavBarBrand, NavLogo } from './styledComponents'\n\nclass Header extends Component {\n   onClickLogout = () => {\n      const { logoutUser } = this.props\n      logoutUser()\n   }\n\n   renderAuthItems = () => {\n      const { isLoggedIn } = this.props\n      if (isLoggedIn) {\n         return (\n            <Nav.Link>\n               <div onClick={this.onClickLogout}>Logout</div>\n            </Nav.Link>\n         )\n      } else {\n         return (\n            <React.Fragment>\n               <Nav.Link as={Link} to={REGISTER_ROUTE_PATH}>\n                  Register\n               </Nav.Link>\n               <Nav.Link as={Link} to={LOGIN_ROUTE_PATH}>\n                  Login\n               </Nav.Link>\n            </React.Fragment>\n         )\n      }\n   }\n\n   render() {\n      return (\n         <NavBarContainer collapseOnSelect expand='lg' bg='dark' variant='dark'>\n            <Container>\n               <NavBarBrand>\n                  <NavLogo\n                     src={\n                        'https://zohowebstatic.com/sites/default/files/ogimage/bugtracker-logo.png'\n                     }\n                     width='35'\n                     height='35'\n                     alt='App Logo'\n                  />\n                  Bug Tracker\n               </NavBarBrand>\n               <Navbar.Toggle aria-controls='responsive-navbar-nav' />\n               <Navbar.Collapse id='responsive-navbar-nav'>\n                  <Nav className='ms-auto'>\n                     <Nav.Link as={Link} to={DASHBOARD_ROUTE_PATH}>\n                        Dashboard\n                     </Nav.Link>\n                     {this.renderAuthItems()}\n                  </Nav>\n               </Navbar.Collapse>\n            </Container>\n         </NavBarContainer>\n      )\n   }\n}\n\nconst mapStateToProps = state => {\n   return {\n      isLoggedIn: state.entities.users.loginStatus\n   }\n}\n\nconst mapDispatchToProps = dispatch => {\n   return {\n      logoutUser: () => {\n         dispatch(logoutUser())\n      }\n   }\n}\n\nconst HeaderWithRouter = withRouter(Header)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderWithRouter)\n","import { Component } from 'react'\nimport { Provider } from 'react-redux'\nimport { Switch, HashRouter as Router } from 'react-router-dom'\n\nimport store from './store/configureStore'\n\nimport LoginRoute from './routes/LoginRoute'\nimport DashboardRoute from './routes/DashboardRoute'\nimport RegisterRoute from './routes/RegisterRoute'\n\nimport {\n   AuthCheckRoute,\n   ProtectedRoute\n} from './components/RouteUtilComponents'\nimport Navbar from './components/Navbar'\n\nimport {\n   DASHBOARD_ROUTE_PATH,\n   HOME_ROUTE_PATH,\n   LOGIN_ROUTE_PATH,\n   REGISTER_ROUTE_PATH\n} from './constants/NavigationConstants'\n\nclass App extends Component {\n   renderRoutes = () => {\n      return (\n         <Switch>\n            <AuthCheckRoute path={LOGIN_ROUTE_PATH}>\n               <LoginRoute />\n            </AuthCheckRoute>\n            <AuthCheckRoute path={REGISTER_ROUTE_PATH}>\n               <RegisterRoute />\n            </AuthCheckRoute>\n            <ProtectedRoute path={DASHBOARD_ROUTE_PATH}>\n               <DashboardRoute />\n            </ProtectedRoute>\n            <ProtectedRoute path={HOME_ROUTE_PATH}>\n               <DashboardRoute />\n            </ProtectedRoute>\n         </Switch>\n      )\n   }\n   render() {\n      return (\n         <Provider store={store}>\n            <Router>\n               <Navbar />\n               {this.renderRoutes()}\n            </Router>\n         </Provider>\n      )\n   }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}